#coding=utf-8

import sys
from scapy.all import *
from scapy.layers.l2 import *
from threading import Thread


# 构造数据包并发送
def scanHOST(IP_list):
    pkt = Ether(dst='FF:FF:FF:FF:FF:FF') / ARP(pdst=IP_list)
    sendp(pkt, verbose=False)


# 捕捉数据包并过滤出指定条件的数据包确定主机是否存活
def is_host_live():
    def arp_scan_callback(pkt):
        # 如果捕捉的数据包有ARP层并且是op 参数为is-at,则确定主机存活
        if ARP in pkt and pkt[ARP].op is 2:
            return pkt.sprintf("%ARP.hwsrc%\t%ARP.psrc%    is lived")

    # 定义一个过滤器，只捕捉arp 数据包，并调用回调函数进行处理
    sniff(filter='arp', store=0, prn=arp_scan_callback, timeout=3)


def main():
    args = sys.argv
    # 如果接受的参数不是两个的话，则打印提示并退出
    if len(args) != 2:
        print('Usage: python arp_scan.py 192.168.10.0/24')
        exit()

    Thread(target=is_host_live).start()  # 定义一个子线程并运行捕捉器函数
    scanHOST(args[1])  # 将参数传入扫描函数并运行


if __name__ == '__main__':
    main()
